############
## SPACES ##
############

- space: VirtualLab
  alignWithSegment:
    segment: Hips

- parameter: VirtualLabOrigin
  steps:
    - marker: RForefoot2
    - multiply: [$prev, 0]

- parameter: VirtualLabForward
  steps:
    - add: [WaistRFront, WaistLFront]
    - multiply: [$prev, 0.5]
    - subtract: [$prev, WaistBack]
    - mean: $prev

- segment: VirtualLabSegment
  steps:
    - segment:
      origin: VirtualLabOrigin
      primaryAxis: VirtualLabForward
      secondaryAxis: [[0,0,0], [0,0,1]]
      order: yz 

############
## EVENTS ##
############

## Pole plant event detection is based on LPoleDown marker velocity and acceleration
# Todo: Use the RPoleDown marker as well to create an Pole Plant event and take average event between Right and Left
# First gapfill marker
- marker: LPoleDown_filtered
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - marker: LPoleDown
    - gapFill:
    - lowpass: $prev
      order: 2
      cutoff: 6
      extrapolate: 100

# Calculate LPoleDown velocity
- parameter: LPoleDown_vel
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - marker: LPoleDown_filtered
      space: VirtualLab
    - convert:
      from: mm
      to: m
    - lowpass:
      extrapolate: 100
      cutoff: 16
    - velocity:
    - lowpass:
      extrapolate: 100
      cutoff: 16

# Calculate LPoleDown acceleration
- parameter: LPoleDown_acc
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - marker: LPoleDown_filtered
      space: VirtualLab
    - convert:
      from: mm
      to: m
    - lowpass:
      extrapolate: 100
      cutoff: 12
    - acceleration:
    - lowpass:
      extrapolate: 100
      cutoff: 20

# Pole plant event (PP): Get the frame number where peak height is above threshold
- event: PP
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - negate: LPoleDown_acc.y
    - peakFinder: $prev 
      height: 25
  

############
## ANGLES ##
############
## Hip angles
# Left
- parameter: Left Hip Angles
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - jointAngle: [Hips, LeftUpLeg]
    - multiply: [$prev, [1, -1, 1]]

# Right
- parameter: Right Hip Angles
  set: right
  where:
    name: Cross-country skiing*
  steps:
    - jointAngle: [Hips, RightUpLeg]

## Knee angles
# Left
- parameter: Left Knee Angles
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - jointAngle: [LeftUpLeg, LeftLeg]
    - multiply: [$prev, [-1, -1, -1]]

# Right
- parameter: Right Knee Angles
  set: right
  where:
    name: Cross-country skiing*
  steps:
    - jointAngle: [RightUpLeg, RightLeg]
    - multiply: [$prev, [-1, 1, 1]]

## Elbow angles
# Left 
- parameter: Left Elbow Angles
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - jointAngle: [LeftArm, LeftForeArm]

# Right
- parameter: Right Elbow Angles
  set: right
  where:
    name: Cross-country skiing*
  steps:
    - jointAngle: [RightArm, RightForeArm]

#############
## METRICS ##
#############
## Distance binding to pole at PP
# Get coordinates of LPoleDown at PP expressed in VirtualLab
# Gap-fill LForeFoot2 marker (LPoleDown marker is filtered above)
- marker: LForefoot2_filtered
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - marker: LForefoot2
    - gapFill:
    - lowpass: $prev
      order: 2
      cutoff: 6
      extrapolate: 100

# Calculate distance between LPoleDown and LForefoot2 at PP
- parameter: Distance_LPoleDown_LForefoot2_PP
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - subtract: [LPoleDown_filtered@PP, LForefoot2_filtered@PP] 
    - convert:
      from: mm
      to: m

## Calculate hip angles at PP
# Left
- parameter: Left_Hip_Angle_PP 
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - import: Left Hip Angles@PP

# Right
- parameter: Right_Hip_Angle_PP 
  set: right
  where:
    name: Cross-country skiing*
  steps:
    - import: Right Hip Angles@PP

## Calculate elbow angles at PP
# Left
- parameter: Left_Elbow_Angles_PP 
  set: left
  where:
    name: Cross-country skiing*
  steps:
    - import: Left Elbow Angles@PP

# Right
- parameter: Right_Elbow_Angles_PP 
  set: right
  where:
    name: Cross-country skiing*
  steps:
    - import: Right Elbow Angles@PP